api:
  # Default values for pogues API.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: inseefr/pogues-back-office
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev-cra

  imagePullSecrets: []
  nameOverride: "pogues-api"
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example-api.local
        paths:
          - path: /

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  properties: |-
    # SSL
    fr.insee.pogues.force.ssl=false
    # Log4J configuration File
    fr.insee.rmespogfo.log.configuration=log4j2.xml
    # Swagger host
    fr.insee.pogues.api.host =
    fr.insee.pogues.api.name = /api
    fr.insee.pogues.api.scheme = https
    # Database properties
    fr.insee.pogues.persistence.database.host = 
    fr.insee.pogues.persistence.database.port = 
    fr.insee.pogues.persistence.database.schema = 
    fr.insee.pogues.persistence.database.user =
    fr.insee.pogues.persistence.database.password =
    fr.insee.pogues.persistence.database.driver = org.postgresql.Driver
    fr.insee.pogues.persistence.database.table =
    # Authentication properties (NONE or OIDC)
    fr.insee.pogues.authentication = NONE
    # Role properties
    fr.insee.pogues.role.admin =
    fr.insee.pogues.role.user =
    # Metadata service
    fr.insee.pogues.api.remote.metadata.url = ***
    # Stromae service
    fr.insee.pogues.api.remote.stromae.vis.url = ***
    # Eno service
    fr.insee.pogues.api.remote.eno.host = ***
    fr.insee.pogues.api.remote.eno.scheme = ***

ui:
  # Default values for pogues API.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: inseefr/pogues
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev-cra

  env:
    API_URL: "https://chart-example-api.local/api"

  imagePullSecrets: []
  nameOverride: "pogues-ui"
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example-ui.local
        paths:
          - path: /

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  postgresqlUsername: admin

  postgresqlPassword: admin

  postgresqlDatabase: pogues-db

  primary:
    extraInitContainers:
      - name: import-dump
        image: busybox
        command:
          [
            "wget",
            "https://sample/backup.sql",
            "--output-document=/import/backup.sql",
          ]
        volumeMounts:
          - mountPath: /import
            name: import-volume

    extraVolumes:
      - name: import-volume
        emptyDir: {}

    extraVolumeMounts:
      - name: import-volume
        mountPath: "/docker-entrypoint-initdb.d"
